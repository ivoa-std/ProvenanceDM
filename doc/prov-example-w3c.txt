# Example: provenance of a stacked image using W3C PROV-DM

This examples uses the [PROV-N](http://www.w3.org/TR/2013/REC-prov-n-20130430/) notation of W3C. 
Here, we just restrict ourselves to the classes provided by the W3C PROV-DM, i.e. in particular we are *not* making use of prototypes and dataDescriptions.
Instead, it is expected that a pre-defined vocabulary is used to classify the processes and data.

## Vocabulary
*List of words that should come from some kind of thesaurus*
std:fits
param:integer
param:text
process:image stacking
role:source image // this is an input thing
role:result image // this is a result (output) thing
role:ncombine // this is more like an input thing
prov-namespace: http://www.w3.org/ns/prov#


## Entities

#### Images
entity(
  e_img500_id, 
  [
    type = "file:fits", 
    accessReference = "http://foo.bar/ta220500_1OFCU2als"
  ]
)

entity(
  e_img501_id, 
  [
    type = "file:fits", 
    accessReference = "http://foo.bar/ta220501_1OFCU2als"
  ]
)

entity(
  e_img502_id, 
  [
    type = "file:fits", 
    accessReference = "http://foo.bar/ta220502_1OFCU2als"
  ]
)

entity(
  e_resultimage_id, 
  [
    type = "file:fits", 
    accessReference = "http://foo.bar/ta220502_1OFCU2als"
  ]
)

#### Parameters
entity(
  e_n_id, 
  [
    type = "param:integer",
    ucd = stat.number,
    value = 3,
    description = "number of images to combine"
  ]
)

*or:*
entity(
  e_n_id, 
  [
    type = "param:integer",
    ucd = stat.number,
    value = 3,
    description = "Number of images to combine"
  ]
)

~~entity(
  e_softname_id, 
  [
    type = "param:text", 
    value = "NOAO-IRAF FITS Image Kernel July 2003",
    description = "Some useful software"
  ]
)
~~~
**NOTE**
*I think it fits more to W3C if we define the software-name as an attribute to the specific activity instead of an extra data-item (parameter).*


## Activity
activity(
  a_image_stacking_2014_08_07_id,   // id, required
  2014-05-15T03:43:46,              // startTime, optional
  -,                                // endTime, optional
  [                                 // parameter list, optional
    method = "process:image_stacking",
    description = "Combination of multiple different-epoch images to improve SNR"
    software = "NOAO-IRAF FITS Image Kernel July 2003"
  ]
)

## Agent
agent(
  ag_astronomer_id, 
  [
    name = "Jack Astron", 
    affiliation = "AIP", 
    prov:type = "prov:Person", 
    position = "student"
  ]
)


## Relations

wasGeneratedBy(e_resultimage_id, a_image_stacking_2014_08_07_id)
*means: entity e_resultimage_id was generated by activity a_image_stacking_2014_08_07_id*

used(a_image_stacking_2014_08_07_id, e_img500_id, [role = "role:source image"])
used(a_image_stacking_2014_08_07_id, e_img501_id, [role = "role:source image"])
used(a_image_stacking_2014_08_07_id, e_img502_id, [role = "role:source image"])
used(a_image_stacking_2014_08_07_id, e_n_id, [role = "role:ncombine"])
*activity used the given entities; 'input data'*

wasAssociatedWith(a_image_stacking_2014_08_07_id, astronomer_id, [role = "prov:Creator"])
*activity was associated with given agent*

wasAttributedTo(e_resultimage_id, ag_astronomer_id, [prov:type = "authorship"])
*entity was attributed to given agent*



## Again, but more compact, using one-liners and no comments
entity(e_img500_id, [type = "file:fits", accessReference = "http://foo.bar/ta220500_1OFCU2als"])

entity(e_img501_id, [type = "file:fits", accessReference = "http://foo.bar/ta220501_1OFCU2als"])

entity(e_img502_id, [type = "file:fits", accessReference = "http://foo.bar/ta220502_1OFCU2als"])

entity(e_resultimage_id, [type = "file:fits", accessReference = "http://foo.bar/ta220502_1OFCU2als"])

entity(e_n_id, [type = "param:integer", ucd = stat.number, value = 3, description = "number of images to combine"])

activity(a_image_stacking_2014_08_07_id, 2014-05-15T03:43:46, -, [method = "process:image_stacking", description = "Combination of multiple different-epoch images to improve SNR", software = "NOAO-IRAF FITS Image Kernel July 2003"])

agent(ag_astronomer_id, [name = "Jack Astron", affiliation = "AIP", prov:type = "prov:Person", position = "student"])

wasGeneratedBy(e_resultimage_id, a_image_stacking_2014_08_07_id)

used(a_image_stacking_2014_08_07_id, e_img500_id, [role = "role:source image"])
used(a_image_stacking_2014_08_07_id, e_img501_id, [role = "role:source image"])
used(a_image_stacking_2014_08_07_id, e_img502_id, [role = "role:source image"])
used(a_image_stacking_2014_08_07_id, e_n_id, [role = "role:ncombine"])

wasAssociatedWith(a_image_stacking_2014_08_07_id, ag_astronomer_id, [role = "prov:Creator"])

wasAttributedTo(e_resultimage_id, ag_astronomer_id, [prov:type = "authorship"])
